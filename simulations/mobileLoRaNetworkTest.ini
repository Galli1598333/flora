[General]
network = LoRaNetworkTest
rng-class = "cMersenneTwister"

# network features
**.numberOfGateways = 2
**.loRaGW[0].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0

**.loRaGW[1].numUdpApps = 1
**.loRaGW[1].packetForwarder.localPort = 2000
**.loRaGW[1].packetForwarder.destPort = 3000
**.loRaGW[1].packetForwarder.destAddresses = "networkServer"
**.loRaGW[1].packetForwarder.indexNumber = 1

**.networkServer.numUdpApps = 2
**.networkServer.**.evaluateADRinServer = false
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destAddresses = "loRaGW[0]"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = ${"avg"}
**.networkServer.udpApp[1].typename = "NetworkServerApp"
**.networkServer.udpApp[1].destAddresses = "loRaGW[1]"
**.networkServer.udpApp[1].destPort = 2000
**.networkServer.udpApp[1].localPort = 3000
**.networkServer.udpApp[1].adrMethod = ${"avg"}

**.numberOfNodes = 10
**.numberOfPacketsToSend = 0 #0 means infinite number of packets
sim-time-limit = 7d
warmup-period = 1d
simtime-resolution = -11

**.timeToFirstPacket = exponential(100s)
**.timeToNextPacket = exponential(100s)
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = (2dBm + 3dBm*intuniform(0, 4))

# deployment of nodes in a circle with radius=maxGatewayDistance and gateway at gatewayX,gatewayY
#**.loRaNodes[*].deploymentType = "circle"
#**.loRaNodes[*].maxGatewayDistance = 120.0
#**.loRaNodes[*].gatewayX = 240
#**.loRaNodes[*].gatewayY = 240

# random deployment of nodes in a square square area
# make sure that initial[XYZ] is not above node constraintAreaMax[XYZ]
**.loRaNodes[*].**.initialX = uniform(0m, 480m)
**.loRaNodes[*].**.initialY = uniform(0m, 480m)
**.loRaNodes[*].**.initialZ = uniform(0m, 20m)

**.loRaNodes[*].**.speed = uniform(1mps, 2mps)
**.loRaNodes[0].*.deviceId = 0
**.loRaNodes[1].*.deviceId = 1
**.loRaNodes[2].*.deviceId = 2
**.loRaNodes[3].*.deviceId = 3
**.loRaNodes[4].*.deviceId = 4
**.loRaNodes[5].*.deviceId = 5
**.loRaNodes[6].*.deviceId = 6
**.loRaNodes[7].*.deviceId = 7
**.loRaNodes[8].*.deviceId = 8
**.loRaNodes[9].*.deviceId = 9


#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
# make sure that initial[XYZ] is not above gateway constraintAreaMax[XYZ]
**.loRaGW[0].**.initialX = 240m#uniform(0m, 50m)
**.loRaGW[0].**.initialY = 240m
**.loRaGW[0].**.initialZ = 50m

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
# area constraints gateways
**.loRaGW[*].mobility.constraintAreaMinX = 0m
**.loRaGW[*].mobility.constraintAreaMinY = 0m
**.loRaGW[*].mobility.constraintAreaMinZ = 0m
**.loRaGW[*].mobility.constraintAreaMaxX = 480m
**.loRaGW[*].mobility.constraintAreaMaxY = 480m
**.loRaGW[*].mobility.constraintAreaMaxZ = 50m
# area constraints nodes
**.loRaNodes[*].mobility.constraintAreaMinX = 0m
**.loRaNodes[*].mobility.constraintAreaMinY = 0m
**.loRaNodes[*].mobility.constraintAreaMinZ = 0m
**.loRaNodes[*].mobility.constraintAreaMaxX = 480m
**.loRaNodes[*].mobility.constraintAreaMaxY = 480m
**.loRaNodes[*].mobility.constraintAreaMaxZ = 20m


LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false
